@*@model Cf.ViewModels.LoanRequestViewModel*@
@model Portal.ViewModels.EmployeeDebtsViewModel

@using (Html.BeginForm())
{

    <div class="row">
        <div class="col-xs-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title"> @ViewBag.CalculateDebts</h4>
                    <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i id="minusBtn" class="icon-minus4"></i></a></li>
                            <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                            <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div id="CalculationCard" class="card-body collapse in">
                    <div class="card-block">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                        <div class="form-body">

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LoanRequest.RequestProduct.Employee, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.RequestProduct.Employee)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        @Html.EditorFor(model => model.LoanRequest.RequestProduct.Employee, new { htmlAttributes = new { @class = "form-control" } })
                                        @*@Html.DropDownListFor(model => model.RequestProduct.Employee, (SelectList)@ViewBag.EmployeeList, htmlAttributes: new { @class = "form-control combobox" })*@
                                        @Html.ValidationMessageFor(model => model.LoanRequest.RequestProduct.Employee, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LoanRequest.RequestProduct.ProductType, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.RequestProduct.ProductType)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        @Html.DropDownListFor(model => model.LoanRequest.RequestProduct.ProductType, (SelectList)@ViewBag.ProductTypeList, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.LoanRequest.RequestProduct.ProductType, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LoanRequest.Request.Amount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.Request.Amount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        @Html.EditorFor(model => model.LoanRequest.Request.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LoanRequest.Request.Amount, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">

                                        @Html.LabelFor(model => model.LoanRequest.RequestProductProductRefundableProduct.PaymentPeriod, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.RequestProductProductRefundableProduct.PaymentPeriod)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        @Html.EditorFor(model => model.LoanRequest.RequestProductProductRefundableProduct.PaymentPeriod, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LoanRequest.RequestProductProductRefundableProduct.PaymentPeriod, "", new { @class = "text-danger" })
                                    </div>
                                </div>                                
                            </div>


                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LoanRequest.LoanRequest.TotalDeduction, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.LoanRequest.TotalDeduction)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        @Html.EditorFor(model => model.LoanRequest.LoanRequest.TotalDeduction, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LoanRequest.LoanRequest.TotalDeduction, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LoanRequest.LoanRequest.NetIncome, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.LoanRequest.NetIncome)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        @Html.EditorFor(model => model.LoanRequest.LoanRequest.NetIncome, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LoanRequest.LoanRequest.NetIncome, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <button type="button" id="discover" class="btn btn-primary mr-1" style="margin-top: 27px;">
                                            @ViewBag.Discover
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <ul class="nav nav-pills  ">
                                <li class="nav-item">
                                    <a class="nav-link active" id="active-tab" data-toggle="tab" href="#Employee" aria-controls="active" aria-expanded="false">@ViewBag.Employee</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link " id="link-tab" data-toggle="tab" href="#Loan" aria-controls="link" aria-expanded="true">@ViewBag.Loan</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link " id="link-tab" data-toggle="tab" href="#LoanStatusResult" aria-controls="link" aria-expanded="true">@ViewBag.Result</a>
                                </li>
                            </ul>
                            <div class="tab-content px-1 pt-1">
                                <div role="tabpanel" class="tab-pane fade active in" id="Employee" aria-labelledby="active-tab" aria-expanded="false">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.FullName, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.FullName)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="FullName" class="form-control" name="FullName" />
                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.DepartmentName, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.DepartmentName)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="DepartmentName" class="form-control" name="DepartmentName" />
                                            </div>

                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.DepartmentSalaryWorkPlaceName, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.DepartmentSalaryWorkPlaceName)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="DepartmentSalaryWorkPlaceName" class="form-control" name="DepartmentSalaryWorkPlaceName" />
                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.EmployeeStatusName, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.EmployeeStatusName)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="EmployeeStatusName" class="form-control" name="EmployeeStatusName" />
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.CategoryName, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.CategoryName)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="CategoryName" class="form-control" name="CategoryName" />
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.Seniority, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.Seniority)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="Seniority" class="form-control" name="Seniority" />
                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.MinSeniority, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.MinSeniority)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="MinSeniority" class="form-control" name="MinSeniority" />
                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.MinReusePeriod, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.MinReusePeriod)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="MinReusePeriod" class="form-control" name="MinReusePeriod" />
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.CersStartDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.CersStartDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="CersStartDate" class="form-control" name="CersStartDate" />
                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.CfStartDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.CfStartDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="CfStartDate" class="form-control" name="CfStartDate" />
                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.LeaveDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.LeaveDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="LeaveDate" class="form-control" name="LeaveDate" />
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.LeaveReason, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.LeaveReason)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="LeaveReason" class="form-control" name="LeaveReason" />
                                            </div>
                                        </div>

                                    </div>

                                </div>
                                <div class="tab-pane fade " id="Loan" role="tabpanel" aria-labelledby="link-tab" aria-expanded="true">

                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.Installment, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.Installment)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="Installment" class="form-control" name="Installment" />
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.NetAmount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.NetAmount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="NetAmount" class="form-control" name="NetAmount" />
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.ProfitAmount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.ProfitAmount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="ProfitAmount" class="form-control" name="ProfitAmount" />
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.MaxAmount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.MaxAmount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="MaxAmount" class="form-control" name="MaxAmount" />
                                            </div>

                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.GuarantorsCount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.GuarantorsCount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="GuarantorsCount" class="form-control" name="GuarantorsCount" />
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LoanRequest.EmployeeProductCalculatorResult.AnnualRate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.EmployeeProductCalculatorResult.AnnualRate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                <input disabled id="Rate" class="form-control" name="Rate" />
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @Html.Label((string)ViewBag.Result)
                                                <input disabled id="ResultStatus" class="form-control" name="ResultStatus" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="tab-pane fade " id="LoanStatusResult" role="tabpanel" aria-labelledby="link-tab" aria-expanded="true">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.DebtRemainingAmount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.DebtRemainingAmount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="DebtRemainingAmount" class="form-control" name="DebtRemainingAmount" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.WarrantRemainingAmount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.WarrantRemainingAmount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="WarrantRemainingAmount" class="form-control" name="WarrantRemainingAmount" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.TotalAmount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.TotalAmount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="TotalAmount" class="form-control" name="TotalAmount" />
                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.DebtInstallment, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.DebtInstallment)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="DebtInstallment" class="form-control" name="DebtInstallment" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.WarrantInstallment, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.WarrantInstallment)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="WarrantInstallment" class="form-control" name="WarrantInstallment" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.TotalInstallment, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.TotalInstallment)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="TotalInstallment" class="form-control" name="TotalInstallment" />
                                                </div>
                                            </div>
                                        </div>


                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.MaxAllowedDebt, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.MaxAllowedDebt)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="MaxAllowedDebt" class="form-control" name="MaxAllowedDebt" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.MaxAllowedDeduction, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.MaxAllowedDeduction)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="MaxAllowedDeduction" class="form-control" name="MaxAllowedDeduction" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.IncomeSolvency, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.IncomeSolvency)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="IncomeSolvency" class="form-control" name="IncomeSolvency" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.LoanRequest.GetEmployeeSolvencyResult.NetSalarySolvency, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanRequest.GetEmployeeSolvencyResult.NetSalarySolvency)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                    <input disabled id="NetSalarySolvency" class="form-control" name="NetSalarySolvency" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />
                        <button type="button" id="addDebtsCard" class="btn btn-primary mr-1">
                            @ViewBag.Insert
                        </button>
                        @*<button type="button" class="btn btn-warning">
                             @Html.ActionLink((string)ViewBag.Back, "Index")
                        </button>*@
                    </div>

                </div>
            </div>
        </div>
    </div>
   
    
}
@Html.Partial("_CreateDebt")
@Html.Partial("_Warrants")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
		$(function () {
            $.validator.addMethod('date',
            function (value, element) {
                if (this.optional(element)) {
                    return true;
                }
                var ok = true;
                try
                {
                    $.datepicker.parseDate('dd/mm/yy', value);
                }
                catch (err) {
                    ok = false;
                }
                return ok;
            });
            $(".IsDate").datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });
        });
</script>
    <script>
        $(document).ready(function () {

            //$(window).keydown(function (e) {
            //    if (e.keyCode == 13) {
            //        $('#discover').click();
            //        event.preventDefault();
            //        return false;
            //    }
            //});
        });
        $(function () {

            $("#addDebtsCard").click(function () {
                // minimize the first card
                var value = $("#CalculationCard").attr("class").replace("in", "");
                $("#CalculationCard").attr("class", value);
                $("#minusBtn").attr("class", "icon-plus4");

                // set the informations
                
                var employeeId = $("#LoanRequest_RequestProduct_Employee").val();
                var amount = $("#LoanRequest_Request_Amount").val();
                var period = $("#LoanRequest_RequestProductProductRefundableProduct_PaymentPeriod").val();
                var installment = $("#Installment").val();
              
                console.log(employeeId + "," + amount + "," + period + "," + installment);

                $("#EmployeeIdDebt").val(employeeId);
                $("#AmountDebt").val(amount);
                $("#PeriodsInMonthsDebt").val(period);
                $("#InstallmentDebt").val(installment);

                // expand the second card
                $("#debtminusBtn").attr("class", "icon-minus4");               
                $("#DebtCard").attr("class", "card-body collapse in");
                 
            });

            $("#AddDebt").click(function () {
                 
                // minimize the second card (Debts) 
               
                var data = $("#CreateDebtForm").serialize();

                $.ajax({
                    url: $("#CreateDebtForm").attr("action"),
                    data: data,
                    type: "POST",
                    success: function (result) {
                        if (result.data == 0)
                        {
                            console.log("Here is the data = " + result.error);
                            alert("Error : "+ result.error);
                        }
                        else
                        {
                            console.log("Here is the data = " + data);
                            $("#Instance_DebtId").val(result);
                            var value = $("#DebtCard").attr("class").replace("in", "");
                            $("#DebtCard").attr("class", value);
                            $("#debtminusBtn").attr("class", "icon-plus4");

                            $("#warrantMinusBtn").attr("class", "icon-minus4");
                            $("#warrantCard").attr("class", "card-body collapse in");
                            //alert("Debts has been added sucessfully");
                            alert("تم إضافة المديونية بنجاح");
                        }
                        //$('#loading').hide();
                    },
                    error: function (error) {
                        console.log("error" + error);
                        alert("حدث خطأ ما");
                        //alert("Error while adding the debt");
                    }
                });
                //$("#CreateDebtForm").submit();
            });
            $("#discover").click(function () {
                
                var productId = $("#LoanRequest_RequestProduct_ProductType").val();
                var employeeId = $("#LoanRequest_RequestProduct_Employee").val();
                var amount = $("#LoanRequest_Request_Amount").val();
                var period = $("#LoanRequest_RequestProductProductRefundableProduct_PaymentPeriod").val();
                var netAmount = $("#LoanRequest_LoanRequest_NetIncome").val();
                var deductions = $("#LoanRequest_LoanRequest_TotalDeduction").val();

                if (productId == '' || employeeId == '' || amount == '' || period == '' || netAmount == '' || deductions == '')
                {
                    swal("", '@ViewBag.ValidateDiscover', "error");
                }
                else
                {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action( "Calculate", "DebtsManagement")',
                        data:
                            '{ employeeId: ' + employeeId +
                            ', productTypeId:' + productId +
                            ', amount: ' + amount +
                            ', period: ' + period +
                            ', netAmount: ' + netAmount +
                            ', deductions: '+ deductions + '}'
                   ,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response == "Error")
                            {

                            }
                            else
                            {

                            }

                            var Calculator = response.Calculator;
                            var Solevency = response.Solevency;

                            var CersStartDate = Calculator.CersStartDate.replace('/Date(', '');
                            CersStartDate = CersStartDate.replace(')/', '');
                            var dateCersStartDate = new Date(parseInt(CersStartDate));

                            var CfStartDate = Calculator.CfStartDate.replace('/Date(', '');
                            CfStartDate = CfStartDate.replace(')/', '');

                            var dateCfStartDate = new Date(parseInt(CfStartDate));

                            console.log("Date=" + dateCersStartDate.toISOString() + " ,, " + dateCfStartDate.toLocaleDateString())

                            // Employee Info
                            $("#MaxAmount").val(Calculator.MaxAmount);
                            $("#Seniority").val(Calculator.Seniority);
                            $("#MinSeniority").val(Calculator.MinSeniority);
                            $("#MinReusePeriod").val(Calculator.MinReusePeriod);
                            $("#CersStartDate").val(dateCersStartDate.toLocaleDateString());
                            $("#CfStartDate").val(dateCfStartDate.toLocaleDateString());
                            $("#LeaveDate").val(Calculator.LeaveDate);
                            $("#LeaveReason").val(Calculator.LeaveReason);
                            $("#DepartmentName").val(Calculator.DepartmentName);
                            $("#DepartmentSalaryWorkPlaceName").val(Calculator.DepartmentSalaryWorkPlaceName);
                            $("#EmployeeStatusName").val(Calculator.EmployeeStatusName);
                            $("#CategoryName").val(Calculator.CategoryName);
                            $("#FullName").val(Calculator.FullName);

                            // Loan Info
                            $("#Installment").val(Calculator.Installment);
                            $("#NetAmount").val(Calculator.NetAmount);
                            $("#ProfitAmount").val(Calculator.ProfitAmount);
                            $("#Rate").val(Calculator.AnnualRate);
                            $("#GuarantorsCount").val(Calculator.GuarantorsCount);

                            if (amount > Calculator.MaxAmount) {
                                $("#ResultStatus").val('@ViewBag.Exceeds');
                                $("#ResultStatus").css("color", "red");
                            }
                            else {
                                $("#ResultStatus").val('@ViewBag.Good');
                                $("#ResultStatus").css("color", "green");
                            }
                            // Solvency
                            $("#DebtRemainingAmount").val(Solevency.DebtRemainingAmount);
                            $("#WarrantRemainingAmount").val(Solevency.WarrantRemainingAmount);
                            $("#TotalAmount").val(Solevency.TotalAmount);
                            $("#DebtInstallment").val(Solevency.DebtInstallment);
                            $("#WarrantInstallment").val(Solevency.WarrantInstallment);
                            $("#TotalInstallment").val(Solevency.TotalInstallment);
                            $("#MaxAllowedDebt").val(Solevency.MaxAllowedDebt);
                            $("#MaxAllowedDeduction").val(Solevency.MaxAllowedDeduction);
                            $("#IncomeSolvency").val(Solevency.IncomeSolvency);
                            $("#NetSalarySolvency").val(Solevency.NetSalarySolvency);

                            if(Solevency.IncomeSolvency<Solevency.MaxAllowedDebt)
                            {
                                $("#IncomeSolvency").css("color", "green");
                            }
                            else
                            {
                                $("#IncomeSolvency").css("color", "red");
                            }
                            if (Solevency.NetSalarySolvency > 0 )
                            {
                                $("#NetSalarySolvency").css("color", "green");
                            }
                            else
                            {
                                $("#NetSalarySolvency").css("color", "red");
                            }

                        },
                        failure: function (response) {
                            alert(response.responseText);
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    });
                }

            });
        });
    </script>
   
<script>
    //$('#CreateDebtForm').on('submit', function (e) {
    //    // Prevent actual form submission
    //    e.preventDefault();
    //    //$('#loading').show();
    //    // Serialize form data
    //    var data = $("#CreateDebtForm").$('input,select,textarea').serialize();

    //    // Submit form data via Ajax
    //    $.ajax({
    //        url: $(this).attr("action"),
    //        data: data,
    //        type: "POST",
    //        success: function (data) {
    //            console.log("Here is the data = " + data);
                
    //            //$('#loading').hide();
    //        },
    //        error: function (error) {
    //            onsole.log("error" + error);
    //        }
    //    });
    //});
</script>    

 
}
