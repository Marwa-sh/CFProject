@model Cf.ViewModels.WarrantVwViewModel

@*<form id="CreateWarrantForm" action="@Url.Action("CreateWarrant","DebtsManagement" , null)" method="post">*@
    <div class="row">
        <div class="col-xs-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">@ViewBag.Insert @ViewBag.Warrants</h4>
                    <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i id="warrantMinusBtn" class="icon-plus4"></i></a></li>
                            <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                            <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div id="warrantCard" class="card-body collapse">
                    <div class="card-block">
                        @using (Ajax.BeginForm("CreateWarrant", "DebtsManagement", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ListOfWarrants" }))
                        { 
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">

                                            @*@Html.LabelFor(model => model.Debt, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Instance.DebtId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Instance.DebtId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Instance.DebtId, new { htmlAttributes = new { @class = "form-control"} })
                                            @Html.ValidationMessageFor(model => model.Instance.DebtId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Employee, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Instance.DebtEmployeeId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Instance.DebtEmployeeId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Instance.DebtEmployeeId, new {  htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Instance.DebtEmployeeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Instance.IsActive, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Instance.IsActive)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Instance.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Instance.IsActive, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Instance.Notes, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Instance.Notes)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Instance.Notes, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Instance.Notes, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary mr-1">
                                    @ViewBag.Save
                                </button>
                                <button type="button" class="btn btn-warning">
                                    @Html.ActionLink((string)ViewBag.Back, "Index")
                                </button>
                            </div>
                            <div id="ListOfWarrants" class="row">
                                @*@Html.Partial("_WarrantsList")*@
                            </div>
                        }   
                       
                    </div>
                </div>
            </div>
        </div>
    </div>
@*</form>*@
@section Scripts {
        <script>
            $(function () {
                $.validator.addMethod('date',
                function (value, element) {
                    if (this.optional(element)) {
                        return true;
                    }
                    var ok = true;
                    try {
                        $.datepicker.parseDate('dd/mm/yy', value);
                    }
                    catch (err) {
                        ok = false;
                    }
                    return ok;
                });
                $(".IsDate").datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });
            });
        </script>
    }














