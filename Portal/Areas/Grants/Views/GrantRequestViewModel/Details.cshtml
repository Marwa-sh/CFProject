@model Cf.ViewModels.ProductVwViewModel
<div class="row">
    <div class="col-xs-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.Action @ViewBag.ModuleName</h4>
                <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                <div class="heading-elements">
                    <ul class="list-inline mb-0">
                        <li><a data-action="collapse"><i class="icon-minus4"></i></a></li>
                        <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                        <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                    </ul>
                </div>
            </div>
            <div class="card-body collapse in">
                <div class="card-block">
                    <form class="form">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.EmployeeId, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.Instance.EmployeeId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Instance.EmployeeId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtEmployeeId" class="form-control" value="@Html.DisplayFor(model => model.Instance.EmployeeId)" disabled />
                                        <input type="hidden" name="Product.Id" id="txtProductId" class="form-control" value="@Html.DisplayFor(model => model.Instance.Id)" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.EmployeeFullName, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.Instance.EmployeeFullName, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Instance.EmployeeFullName)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtEmployeeFullName" class="form-control" value="@Html.DisplayFor(model => model.Instance.EmployeeFullName)" disabled />
                                    </div>
                                </div>                                
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.Amount, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.Instance.Amount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Instance.Amount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtAmount" class="form-control" value="@Html.DisplayFor(model => model.Instance.Amount)" disabled />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.Date, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.RequestVwViewModel.Instance.Date, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.RequestVwViewModel.Instance.Date)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtDate" class="form-control" value="@Html.DisplayFor(model => model.RequestVwViewModel.Instance.Date)" disabled />
                                    </div>
                                </div>
                            </div>
                           
                            
                            
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.Amount, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.RequestVwViewModel.Instance.Amount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.RequestVwViewModel.Instance.Amount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtAmount" class="form-control" value="@Html.DisplayFor(model => model.RequestVwViewModel.Instance.Amount)" disabled />
                                    </div>
                                </div>                               
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.RequestProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.RequestProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.RequestProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtRequestProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.RequestProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName)" disabled />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.RequestProductEmployeeCategoryName, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.RequestProductEmployeeCategoryName, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.RequestProductEmployeeCategoryName)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtRequestProductEmployeeCategoryName" class="form-control" value="@Html.DisplayFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.RequestProductEmployeeCategoryName)" disabled />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.RequestProductProductTypeName, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.GrantType, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.GrantType)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtProductGrantType" class="form-control" value="@Html.DisplayFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.GrantType)" disabled />
                                    </div>
                                </div>
                            </div>
                           
                            <div class="row">           
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.RequestDate, RequestVwViewModel.Instance.Date: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.EventDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.EventDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtRequestDate" class="form-control" value="@Html.DisplayFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.Instance.EventDate)" disabled />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.Notes, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.RequestVwViewModel.Instance.Notes, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.RequestVwViewModel.Instance.Notes)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtNotes" class="form-control" value="@Html.DisplayFor(model => model.RequestVwViewModel.Instance.Notes)" disabled />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @*@Html.LabelFor(model => model.Instance.Date, htmlAttributes: new { @class = "control-label" })*@
                                        @Html.LabelFor(model => model.RequestVwViewModel.Instance.Attachment, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.RequestVwViewModel.Instance.Attachment)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                        <input type="text" id="txtAttachment" class="form-control" value="@Html.DisplayFor(model => model.RequestVwViewModel.Instance.Attachment)" disabled />
                                    </div>
                                </div>

                            </div>
                           
                            
                        </div>

                        <div class="form-actions">
                            <button type="button" class="btn btn-primary mr-1">
                                @Html.ActionLink((string)@ViewBag.Update, "Edit", new
                                   {
                                       id = Model.RequestVwViewModel.GrantRequestVwViewModel.Instance.RequestProductId
                                   })
                            </button>
                            <button type="button" class="btn btn-warning">
                                @Html.ActionLink((string)@ViewBag.Back, "Index")
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xs-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.ServiceEndGrantRequestVwTitle @if (Model.RequestVwViewModel.GrantRequestVwViewModel.ServiceEndGrantRequestVwViewModel.List.Count == 0)
                {<span class="tag tag-default">@Model.RequestVwViewModel.GrantRequestVwViewModel.ServiceEndGrantRequestVwViewModel.List.Count</span>}
                else
                {<span class="tag tag-danger">@Model.RequestVwViewModel.GrantRequestVwViewModel.ServiceEndGrantRequestVwViewModel.List.Count</span> }</h4>
                <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                <div class="heading-elements">
                    <ul class="list-inline mb-0">
                        <li><a data-action="collapse"><i class="icon-plus4"></i></a></li>
                        <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                        <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                    </ul>
                </div>
            </div>
            <div class="card-body collapse out">
                <div class="card-block card-dashboard">
                    <button class="btn btn-success" type="button">
                        @Html.ActionLink((string)ViewBag.Insert + " " + (string)ViewBag.ServiceEndGrantRequestVwTitle, "Create", "ServiceEndGrantRequest")
                    </button>
                </div>
                <div class="table-responsive">
                    <table class="table table-bordered mb-0">
                        <thead class="bg-primary table-head-color">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.RequestVwViewModel.GrantRequestVwViewModel.ServiceEndGrantRequestVwViewModel.Instance.ServiceInMonthes)
                                </th>

                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.RequestVwViewModel.GrantRequestVwViewModel.ServiceEndGrantRequestVwViewModel.List)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ServiceInMonthes)
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
                                            <button type="button" class="btn btn-info">
                                                @Html.ActionLink((string)ViewBag.Details, "Details", "ServiceEndGrantRequest",
                                            new
                                            {
                                                grantRequest = item.GrantRequestRequestProductId
                                            }, null)
                                            </button>
                                            <button type="button" class="btn btn-warning">
                                                @Html.ActionLink((string)ViewBag.Update, "Edit", "ServiceEndGrantRequest",
                                            new
                                            {
                                                grantRequest = item.GrantRequestRequestProductId
                                            }, null)
                                            </button>
                                            <button type="button" class="btn btn-danger deleteLink" data-original-title="@ViewBag.Delete" id="delete" data-id="@item.GrantRequestRequestProductId" data-url="@Url.Action("Delete", "ServiceEndGrantRequest")">@ViewBag.Delete</button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@ViewBag.No</span></button>
                <h4 class="modal-title" id="deleteModalLabel">@ViewBag.Delete @ViewBag.ModuleName</h4>
            </div>
            <div id="deleteModalBody" class="modal-body"></div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $(function () {
        $("#deleteModal").modal("hide");  // initially hides the modal pop-up until needed

        $(".deleteLink").on("click", function () {
		var url=$(this).data("url");
            $.get(url, { id: $(this).data("id") }, function (data) {
                $("#deleteModalBody").html(data);

                $("#deleteModal").modal("show");  // shows the modal pop-up now that we have our partial view
            });

        });
    });
    </script>
    <script>
	$(document).ready(function () {
		$('table').each(function(e){

				var table = document.getElementById("Result").getElementByTagName('tbody')[0];

                // Create an empty <tr> element and add it to the 1st position of the table:
                var row = table.insertRow(0);

                //// Insert new cell
                var cell1 = row.insertCell(0);
                cell1.colSpan = 12;
                cell1.innerText = '@ViewBag.NoRecords';
                cell1.align="center";

            });
	    });
    </script>
}
