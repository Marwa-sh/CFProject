@model Cf.ViewModels.LoanDecisionViewModel
@using Cf.Data;
@using Cf.Services;


<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
</div>
@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-xs-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">@ViewBag.FilterOptions</h4>
                    <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i id="filter" class="icon-minus4"></i></a></li>
                            <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                            <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div id="cardOptions" class="card-body collapse in">
                    <div class="card-block">
                        <form class="form">
                            <div class="form-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.ProductEmployeeId, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Loans.Filter.ProductEmployeeId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Loans.Filter.ProductEmployeeId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Loans.Filter.ProductEmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.ProductEmployeeFullNameContains, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Loans.Filter.ProductEmployeeFullNameContains, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Loans.Filter.ProductEmployeeFullNameContains)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Loans.Filter.ProductEmployeeFullNameContains, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.LoanDecisionNumber, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Loans.Filter.LoanDecisionNumber, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Loans.Filter.LoanDecisionNumber)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Loans.Filter.LoanDecisionNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.MinLoanDecisionDate, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Loans.Filter.MinLoanDecisionDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Loans.Filter.MinLoanDecisionDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.TextBoxFor(model => model.Loans.Filter.MinLoanDecisionDate, htmlAttributes: new { @class = "form-control IsDate" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.MaxLoanDecisionDate, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Loans.Filter.MaxLoanDecisionDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Loans.Filter.MaxLoanDecisionDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.TextBoxFor(model => model.Loans.Filter.MaxLoanDecisionDate, htmlAttributes: new { @class = "form-control IsDate" })
                                        </div>
                                    </div>
                                </div>
                                
                            </div>

                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary mr-1">
                                    @ViewBag.Search
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-xs-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.Title @if (Model.Loans.List.Count == 0)
                {<span class="tag tag-default">@Model.Loans.List.Count</span>}
                else
                {<span class="tag tag-danger">@Model.Loans.List.Count</span> }</h4>
                <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                <div class="heading-elements">
                    <ul class="list-inline mb-0">
                        <li><a data-action="collapse"><i class="icon-minus4"></i></a></li>
                        <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                        <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                    </ul>
                </div>
            </div>
            <div class="card-body collapse in">
                <div class="card-block card-dashboard">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">                              
                                @Html.LabelFor(model => model.Loans.Filter.ProductEmployeeId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Loans.Filter.ProductEmployeeId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                @Html.EditorFor(model => model.Loans.Filter.ProductEmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                         
                        
                    </div>
                </div>
                <div class="table-responsive">
                    <table id="Result" class="table table-bordered mb-0">
                        <thead class="bg-primary table-head-color">
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.ProductId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.ProductEmployeeId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.ProductEmployeeFullName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.ProductEmployeeDepartmentSalaryWorkPlaceName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.ProductProductTypeName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.ProductProductTypeRate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.ProductAmount)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.LoanDecisionNumber)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.LoanDecisionDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Loans.Instance.LoanStatusName)
                                </th>

                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Loans.List)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ProductId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ProductEmployeeId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ProductEmployeeFullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ProductEmployeeDepartmentSalaryWorkPlaceName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ProductProductTypeName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ProductProductTypeRate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ProductAmount)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LoanDecisionNumber)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LoanDecisionDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LoanStatusName)
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
                                            <button type="button" class="btn btn-info">
                                                @Html.ActionLink((string)ViewBag.Details, "Details",
                                            new
                                            {
                                                product = item.ProductId
                                            })
                                            </button>
                                            <button type="button" class="btn btn-warning">
                                                @Html.ActionLink((string)ViewBag.Update, "Edit",
                                            new
                                            {
                                                product = item.ProductId
                                            })

                                            </button>
                                           
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
		$(function () {
            $.validator.addMethod('date',
            function (value, element) {
                if (this.optional(element)) {
                    return true;
                }
                var ok = true;
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                }
                catch (err) {
                    ok = false;
                }
                return ok;
            });
            $(".IsDate").datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });
        });
    </script>

    <script>
	$(document).ready(function () {
	        var len = $('#Result tr').length;
	        var res = $("#Result");
	        if (len == 1)
			{
                var table = document.getElementById("Result").tBodies[0];

                // Create an empty <tr> element and add it to the 1st position of the table:
                var row = table.insertRow(0);

                //// Insert new cell
                var cell1 = row.insertCell(0);
                cell1.colSpan = 12;
                cell1.innerText = '@ViewBag.NoRecords';
                cell1.align="center";

	        }
	        else {
	            var value = $("#cardOptions").attr("class").replace("in", "");
	            $("#cardOptions").attr("class", value);
				$("#filter").attr("class", "icon-plus4");
	        }
	    });
	     
    </script>
}
