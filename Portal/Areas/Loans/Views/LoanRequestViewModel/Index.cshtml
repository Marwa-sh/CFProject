@model Cf.ViewModels.LoanRequestVwViewModel
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
</div>
@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-xs-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">@ViewBag.FilterOptions</h4>
                    <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i id="filter" class="icon-minus4"></i></a></li>
                            <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                            <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div id="cardOptions" class="card-body collapse in">
                    <div class="card-block">
                        <form class="form">
                            <div class="form-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.RequestProductEmployeeId, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.RequestProductEmployeeId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.RequestProductEmployeeId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Filter.RequestProductEmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.RequestProductEmployeeFullNameContains, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.RequestProductEmployeeFullNameContains, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.RequestProductEmployeeFullNameContains)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Filter.RequestProductEmployeeFullNameContains, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.RequestProductProductTypeId, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.RequestProductProductTypeId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.RequestProductProductTypeId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.DropDownListFor(model => model.Filter.RequestProductProductTypeId, (SelectList)@ViewBag.ProductTypeList,  (string)@ViewBag.Select , htmlAttributes: new { @class = "form-control" })
                                            @*@Html.EditorFor(model => model.Filter.RequestProductProductTypeId, new { htmlAttributes = new { @class = "form-control" } })*@
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.MinRequestDate, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.MinRequestDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.MinRequestDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.TextBoxFor(model => model.Filter.MinRequestDate, htmlAttributes: new { @class = "form-control IsDate" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.MaxRequestDate, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.MaxRequestDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.MaxRequestDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.TextBoxFor(model => model.Filter.MaxRequestDate, htmlAttributes: new { @class = "form-control IsDate" })
                                        </div>
                                    </div>
                                </div>                               
                            </div>

                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary mr-1">
                                    @ViewBag.Search
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-xs-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">@ViewBag.Title</h4>
                <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                <div class="heading-elements">
                    <ul class="list-inline mb-0">
                        <li><a data-action="collapse"><i class="icon-minus4"></i></a></li>
                        <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                        <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                    </ul>
                </div>
            </div>
            <div class="card-body collapse in">
                <div class="card-block card-dashboard">
                    <button class="btn btn-success type="button">
                        @Html.ActionLink((string)ViewBag.Insert + " " + (string)ViewBag.ModuleName, "Create")
                    </button>

                    @*<button class="btn btn-outline-info" type="button">
                        @Html.ActionLink("Employee Calculator" , "EmployeeCalculator")
                    </button>*@
                </div>
                <div class="table-responsive">
                    <table id="Result" class="table table-bordered mb-0 ">
                        <thead class="bg-primary table-head-color">
                            <tr>
                               
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestProductEmployeeId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestProductEmployeeFullName)
                                </th>
                               
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestProductEmployeeCategoryName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestProductProductTypeName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestAmount)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestRequestStatusName)
                                </th>

                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.List)
                            {
                                <tr>                                    
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestProductEmployeeId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestProductEmployeeFullName)
                                    </td>
                                   
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestProductEmployeeCategoryName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestProductProductTypeName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestAmount)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestRequestStatusName)
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
                                            <button type="button" class="btn btn-info">
                                                @Html.ActionLink((string)ViewBag.Details, "Details",
                                            new
                                            {
                                                id = item.RequestProductId
                                            })
                                            </button>
                                            <button type="button" class="btn btn-warning">
                                                @Html.ActionLink((string)ViewBag.Update, "Edit",
                                            new
                                            {
                                                id = item.RequestProductId
                                            })

                                            </button>
                                            <button type="button" class="btn btn-danger deleteLink" data-original-title="@ViewBag.Delete" id="delete" data-id="@item.RequestProductId">@ViewBag.Delete</button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@ViewBag.No</span></button>
                <h4 class="modal-title" id="deleteModalLabel">@ViewBag.Delete @ViewBag.ModuleName</h4>
            </div>
            <div id="deleteModalBody" class="modal-body"></div>

        </div>
    </div>
</div>
@section Scripts {
    
<script>
		$(function () {
            $.validator.addMethod('date',
            function (value, element) {
                if (this.optional(element)) {
                    return true;
                }
                var ok = true;
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                }
                catch (err) {
                    ok = false;
                }
                return ok;
            });
            $(".IsDate").datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });
        });
</script>
    <script>
	$(document).ready(function () {
	        var len = $('#Result tr').length;
	        var res = $("#Result");
	        if (len == 1) {
	            var table = document.getElementById("Result").getElementsByTagName('tbody')[0];

	            // Create an empty <tr> element and add it to the 1st position of the table:
	            var row = table.insertRow(0);

	            //// Insert new cell 
	            var cell1 = row.insertCell(0);
	            cell1.colSpan = 12;
	            cell1.innerText = '@ViewBag.NoRecords';
	            cell1.align = "center";
	        }
	        else {
	            var value = $("#cardOptions").attr("class").replace("in", "");
	            $("#cardOptions").attr("class", value);
	            $("#filter").attr("class", "icon-plus4");
	        }
	    });
	    $(function () {
	        $("#deleteModal").modal("hide");  // initially hides the modal pop-up until needed

	        $(".deleteLink").on("click", function () {
	            $.get('@Url.Action("Delete")', { id: $(this).data("id") }, function (data) {
	                $("#deleteModalBody").html(data);

	                $("#deleteModal").modal("show");  // shows the modal pop-up now that we have our partial view
	            });

	        });
	    });
    </script>
}
