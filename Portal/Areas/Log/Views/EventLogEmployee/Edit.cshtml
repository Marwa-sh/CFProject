@model Cf.Data.EventLog
    <h1>@ViewBag.Action @ViewBag.ModuleName</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.LabelFor(model => model.Id, new Dictionary<string, Object>
                { { "class", "control-label col-md-2" },
                  {"title", Html.ToolTipMessageFor(model => model.Id)},
                  {"data-toggle", "tooltip"},
                  {"data-placement", "bottom"}
                })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.EventSource, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.LabelFor(model => model.EventSource, new Dictionary<string, Object>
                { { "class", "control-label col-md-2" },
                  {"title", Html.ToolTipMessageFor(model => model.EventSource)},
                  {"data-toggle", "tooltip"},
                  {"data-placement", "bottom"}
                })
            <div class="col-md-10">
                @Html.DropDownList("EventSource", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventSource, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.EventCategory, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.LabelFor(model => model.EventCategory, new Dictionary<string, Object>
                { { "class", "control-label col-md-2" },
                  {"title", Html.ToolTipMessageFor(model => model.EventCategory)},
                  {"data-toggle", "tooltip"},
                  {"data-placement", "bottom"}
                })
            <div class="col-md-10">
                @Html.DropDownList("EventCategory", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventCategory, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.EventStatus, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.LabelFor(model => model.EventStatus, new Dictionary<string, Object>
                { { "class", "control-label col-md-2" },
                  {"title", Html.ToolTipMessageFor(model => model.EventStatus)},
                  {"data-toggle", "tooltip"},
                  {"data-placement", "bottom"}
                })
            <div class="col-md-10">
                @Html.DropDownList("EventStatus", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventStatus, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Parameters, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.LabelFor(model => model.Parameters, new Dictionary<string, Object>
                { { "class", "control-label col-md-2" },
                  {"title", Html.ToolTipMessageFor(model => model.Parameters)},
                  {"data-toggle", "tooltip"},
                  {"data-placement", "bottom"}
                })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Parameters, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Parameters, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.LabelFor(model => model.Date, new Dictionary<string, Object>
                { { "class", "control-label col-md-2" },
                  {"title", Html.ToolTipMessageFor(model => model.Date)},
                  {"data-toggle", "tooltip"},
                  {"data-placement", "bottom"}
                })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @*@Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.LabelFor(model => model.User, new Dictionary<string, Object>
                { { "class", "control-label col-md-2" },
                  {"title", Html.ToolTipMessageFor(model => model.User)},
                  {"data-toggle", "tooltip"},
                  {"data-placement", "bottom"}
                })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@ViewBag.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink((string)ViewBag.Back, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
