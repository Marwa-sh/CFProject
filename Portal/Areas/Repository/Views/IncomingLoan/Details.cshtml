@model Cf.ViewModels.IncomingLoanVwViewModel
	<div class="row">
        <div class="col-xs-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">@ViewBag.Action @ViewBag.ModuleName</h4>
                    <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i class="icon-minus4"></i></a></li>
                            <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                            <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body collapse in">
                    <div class="card-block">
                        <form class="form">
                            <div class="form-body">
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductId, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductId, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductId)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductId" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductId)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductEmployeeId, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductEmployeeId, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductEmployeeId)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductEmployeeId" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductEmployeeId)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductEmployeeFullName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductEmployeeFullName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductEmployeeFullName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductEmployeeFullName" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductEmployeeFullName)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductEmployeeDepartmentName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductEmployeeDepartmentName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductEmployeeDepartmentName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductEmployeeDepartmentName" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductEmployeeDepartmentName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductEmployeeDepartmentSalaryWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductEmployeeDepartmentSalaryWorkPlaceName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductEmployeeDepartmentSalaryWorkPlaceName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductEmployeeDepartmentSalaryWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductEmployeeDepartmentSalaryWorkPlaceName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductEmployeeCategoryName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductEmployeeCategoryName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductEmployeeCategoryName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductEmployeeCategoryName" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductEmployeeCategoryName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductProductTypeName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductProductTypeName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductProductTypeName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductProductTypeName" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductProductTypeName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductProductTypeRate, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductProductTypeRate, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductProductTypeRate)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductProductTypeRate" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductProductTypeRate)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanProductAmount, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanProductAmount, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanProductAmount)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanProductAmount" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanProductAmount)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanLoanDecisionNumber, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanLoanDecisionNumber, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanLoanDecisionNumber)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanLoanDecisionNumber" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanLoanDecisionNumber)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanLoanDecisionDate, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanLoanDecisionDate, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanLoanDecisionDate)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanLoanDecisionDate" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanLoanDecisionDate)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanLoanDecisionLoanDecisionTypeName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanLoanDecisionLoanDecisionTypeName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanLoanDecisionLoanDecisionTypeName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanLoanDecisionLoanDecisionTypeName" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanLoanDecisionLoanDecisionTypeName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanLoanDecisionIsPaidFromSalary, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanLoanDecisionIsPaidFromSalary, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanLoanDecisionIsPaidFromSalary)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 @Html.CheckBoxFor(model => model.Instance.LoanLoanDecisionIsPaidFromSalary.Value, new { @disabled = "disabled" ,@class="form-control" })
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanLoanGenerationStatusName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanLoanGenerationStatusName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanLoanGenerationStatusName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanLoanGenerationStatusName" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanLoanGenerationStatusName)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.LoanLoanStatusName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.LoanLoanStatusName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.LoanLoanStatusName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtLoanLoanStatusName" class="form-control" value="@Html.DisplayFor(model => model.Instance.LoanLoanStatusName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.MainWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.MainWorkPlaceName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.MainWorkPlaceName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtMainWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.Instance.MainWorkPlaceName)" disabled />
								        </div>
									</div>
								</div>
							</div>

                            <div class="form-actions">
                                <button type="button" class="btn btn-primary mr-1">
								        @Html.ActionLink((string)@ViewBag.Update, "Edit", new {
																	loan = Model.Instance.LoanProductId })
                                </button>
								<button type="button" class="btn btn-warning">
							        @Html.ActionLink((string)@ViewBag.Back, "Index")
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@ViewBag.No</span></button>
                <h4 class="modal-title" id="deleteModalLabel">@ViewBag.Delete @ViewBag.ModuleName</h4>
            </div>
            <div id="deleteModalBody" class="modal-body"></div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        $("#deleteModal").modal("hide");  // initially hides the modal pop-up until needed

        $(".deleteLink").on("click", function () {
		var url=$(this).data("url");
            $.get(url, { id: $(this).data("id") }, function (data) {
                $("#deleteModalBody").html(data);

                $("#deleteModal").modal("show");  // shows the modal pop-up now that we have our partial view
            });

        });
    });
</script>
	<script>
	$(document).ready(function () {
		$('table').each(function(e){
		
				var table = $(this).context;
                var len = table.rows.length;
                if (len == 1) 
                {                    
                    // Create an empty <tr> element
                    var row = table.insertRow(1);

                    //// Insert new cell
                    var cell1 = row.insertCell(0);
                    cell1.colSpan = 12; cell1.align = "center";
                    cell1.innerText = '@ViewBag.NoRecords';                    
                }
                 
            });
	    });
	</script>
}
