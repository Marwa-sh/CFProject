@model Portal.ViewModels.ManageLoanDecision

@{
    ViewBag.Title = "CreateLoanRequestDecision";
}

@using (Html.BeginForm()) 
{ 
    <div class="form-horizontal">
         
        
        <div class="row">
            <div class="col-xs-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="card-title">@ViewBag.Insert @ViewBag.LoanDecision</h4>
                        <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                        <div class="heading-elements">
                            <ul class="list-inline mb-0">
                                <li><a data-action="collapse"><i class="icon-minus4"></i></a></li>
                                <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                                <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                            </ul>
                        </div>
                    </div>
                    <div class="card-body collapse in">
                        <div class="card-block">
                            <form class="form">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-body">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.Number, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.Number)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.EditorFor(model => model.LoanDecision.Number, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.Number, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.Year, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.Year)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.EditorFor(model => model.LoanDecision.Year, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.Year, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.Date, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.Date)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.TextBoxFor(model => model.LoanDecision.Date, htmlAttributes: new { @class = "form-control IsDate" })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.Date, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.DeductionStartDate, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.DeductionStartDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.DeductionStartDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.TextBoxFor(model => model.LoanDecision.DeductionStartDate, htmlAttributes: new { @class = "form-control IsDate" })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.DeductionStartDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">                                       
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.CersNumber, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.CersNumber, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.CersNumber)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.EditorFor(model => model.LoanDecision.CersNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.CersNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.CersDate, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.CersDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.CersDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.TextBoxFor(model => model.LoanDecision.CersDate, htmlAttributes: new { @class = "form-control IsDate" })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.CersDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.Notes, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.Notes)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.EditorFor(model => model.LoanDecision.Notes, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.Notes, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.PaymentNumber, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.PaymentNumber, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.PaymentNumber)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.EditorFor(model => model.LoanDecision.PaymentNumber, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.PaymentNumber, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                     
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.PaymentDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.PaymentDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.TextBoxFor(model => model.LoanDecision.PaymentDate, htmlAttributes: new { @class = "form-control IsDate" })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.PaymentDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.IsPaidFromSalary, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.IsPaidFromSalary, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.IsPaidFromSalary)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.EditorFor(model => model.LoanDecision.IsPaidFromSalary, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.IsPaidFromSalary, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.Reason, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.Reason)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.EditorFor(model => model.LoanDecision.Reason, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.Reason, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.AdditionalClause, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.AdditionalClause, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.AdditionalClause)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.EditorFor(model => model.LoanDecision.AdditionalClause, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.AdditionalClause, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">                                       
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                @*@Html.LabelFor(model => model.AdditionalIntroduction, htmlAttributes: new { @class = "control-label" })*@
                                                @Html.LabelFor(model => model.LoanDecision.AdditionalIntroduction, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.LoanDecision.AdditionalIntroduction)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                                @Html.EditorFor(model => model.LoanDecision.AdditionalIntroduction, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LoanDecision.AdditionalIntroduction, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="table-responsive">
                                    <table id="Result" class="table table-bordered mb-0">
                                        <thead class="bg-primary table-head-color ">
                                            <tr>
                                                <th></th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.LoanRequestVwViewModel.Instance.RequestProductEmployeeId)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.LoanRequestVwViewModel.Instance.RequestProductEmployeeFullName)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.LoanRequestVwViewModel.Instance.RequestProductProductTypeName)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.LoanRequestVwViewModel.Instance.RequestDate)
                                                </th>
                                                <th>
                                                    @Html.DisplayNameFor(model => model.LoanRequestVwViewModel.Instance.RequestProductAmount)
                                                </th>
                                                @*<th>
                                                    @Html.DisplayNameFor(model => model.LoanRequestVwViewModel.Instance.RequestRequestStatusName)
                                                </th>*@

                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @{ 
                                                int index = 0;
                                            }
                                            @foreach (var item in Model.LoanRequestVwViewModel.List)
                                            {
                                                <tr>
                                                    <td>
                                                        <input type="hidden" name="Requests[@index].RequestId" value="@item.RequestProductId" />
                                                        @Html.CheckBox("Requests["+index+"].isChecked")
                                                        @*<input id="isSellected" name="Requests[@index].isChecked" type="checkbox" checked />*@
                                                    </td>
                                                    @{ index = index + 1;}
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.RequestProductEmployeeId)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.RequestProductEmployeeFullName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.RequestProductProductTypeName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.RequestDate)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.RequestAmount)
                                                    </td>
                                                    @*<td>
                                                        @Html.DisplayFor(modelItem => item.RequestRequestStatusName)
                                                    </td>*@
                                                    <td>
                                                        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
                                                            @*<button type="button" class="btn btn-info details" data-id="@item.RequestProductId">
                                                                @ViewBag.Details
                                                            </button>*@
                                                            @*<button type="button" class="btn btn-info details">
                                                                @Html.ActionLink((string)ViewBag.Details, "Details", "ManageLoanRequests",
                                            new
                                            {
                                                id = item.RequestProductId
                                            },null)
                                                            </button>*@
                                                        </div>
                                                    </td>
                                                </tr>

                                            }
                                        </tbody>
                                    </table>
                                </div>

                                <div class="form-actions">
                                    <button type="submit" class="btn btn-primary mr-1">
                                        @ViewBag.Save
                                    </button>
                                    <button type="button" class="btn btn-warning">
                                        @Html.ActionLink((string)ViewBag.Back, "Index")
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


       

        
    </div>

   
}

 
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content"  style="width:850px">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@ViewBag.No</span></button>
                <h4 class="modal-title" id="deleteModalLabel"> @ViewBag.Details</h4>
            </div>
            <div id="detailsModalBody" class="modal-body"></div>

        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
		$(function () {
            $.validator.addMethod('date',
            function (value, element) {
                if (this.optional(element)) {
                    return true;
                }
                var ok = true;
                try {
                    $.datepicker.parseDate('dd/mm/yy', value);
                }
                catch (err) {
                    ok = false;
                }
                return ok;
            });
            $(".IsDate").datepicker({ dateFormat: 'dd/mm/yy', changeYear: true });
        });
</script>
<script>
        $(function () {
            
            $(".details").click(function () {
                var request_id = $(this).data("id");
                $.ajax({
                    type: "POST",
                    url:'@Url.Action("Details", "ManageLoanRequests")',
                    data: '{id: "' + request_id + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        //$('#dialog').html(response);
                        //$('#dialog').dialog('open');
                        $("#detailsModalBody").html(response);

                        $("#detailsModal").modal("show");
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });
        });
</script>
}
