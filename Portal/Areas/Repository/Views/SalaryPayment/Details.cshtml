@model Cf.ViewModels.SalaryPaymentVwViewModel
	<div class="row">
        <div class="col-xs-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">@ViewBag.Action @ViewBag.ModuleName</h4>
                    <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i class="icon-minus4"></i></a></li>
                            <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                            <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body collapse in">
                    <div class="card-block">
                        <form class="form">
                            <div class="form-body">
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentId, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentId, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentId)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentId" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentId)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentEmployeeId, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentEmployeeId, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentEmployeeId)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentEmployeeId" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentEmployeeId)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentEmployeeFullName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentEmployeeFullName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentEmployeeFullName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentEmployeeFullName" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentEmployeeFullName)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentEmployeeDepartmentSalaryWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentEmployeeDepartmentSalaryWorkPlaceName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentEmployeeDepartmentSalaryWorkPlaceName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentEmployeeDepartmentSalaryWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentEmployeeDepartmentSalaryWorkPlaceName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentEmployeeCategoryName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentEmployeeCategoryName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentEmployeeCategoryName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentEmployeeCategoryName" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentEmployeeCategoryName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentDate, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentDate, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentDate)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentDate" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentDate)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentPaymentGroupName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentPaymentGroupName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentPaymentGroupName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentPaymentGroupName" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentPaymentGroupName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentAmount, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentAmount, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentAmount)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentAmount" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentAmount)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentNotes, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentNotes, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentNotes)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentNotes" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentNotes)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.PaymentPaymentStatusName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.PaymentPaymentStatusName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.PaymentPaymentStatusName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtPaymentPaymentStatusName" class="form-control" value="@Html.DisplayFor(model => model.Instance.PaymentPaymentStatusName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.DepartmentName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.DepartmentName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.DepartmentName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtDepartmentName" class="form-control" value="@Html.DisplayFor(model => model.Instance.DepartmentName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.DepartmentSalaryWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.DepartmentSalaryWorkPlaceName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.DepartmentSalaryWorkPlaceName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtDepartmentSalaryWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.Instance.DepartmentSalaryWorkPlaceName)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.DepartmentSalaryWorkPlaceMainWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.DepartmentSalaryWorkPlaceMainWorkPlaceName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.DepartmentSalaryWorkPlaceMainWorkPlaceName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtDepartmentSalaryWorkPlaceMainWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.Instance.DepartmentSalaryWorkPlaceMainWorkPlaceName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.Balance, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.Balance, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.Balance)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtBalance" class="form-control" value="@Html.DisplayFor(model => model.Instance.Balance)" disabled />
								        </div>
									</div>
								</div>
							</div>

                            <div class="form-actions">
                                <button type="button" class="btn btn-primary mr-1">
								        @Html.ActionLink((string)@ViewBag.Update, "Edit", new {
																	payment = Model.Instance.PaymentId })
                                </button>
								<button type="button" class="btn btn-warning">
							        @Html.ActionLink((string)@ViewBag.Back, "Index")
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@ViewBag.No</span></button>
                <h4 class="modal-title" id="deleteModalLabel">@ViewBag.Delete @ViewBag.ModuleName</h4>
            </div>
            <div id="deleteModalBody" class="modal-body"></div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        $("#deleteModal").modal("hide");  // initially hides the modal pop-up until needed

        $(".deleteLink").on("click", function () {
		var url=$(this).data("url");
            $.get(url, { id: $(this).data("id") }, function (data) {
                $("#deleteModalBody").html(data);

                $("#deleteModal").modal("show");  // shows the modal pop-up now that we have our partial view
            });

        });
    });
</script>
	<script>
	$(document).ready(function () {
		$('table').each(function(e){
		
				var table = $(this).context;
                var len = table.rows.length;
                if (len == 1) 
                {                    
                    // Create an empty <tr> element
                    var row = table.insertRow(1);

                    //// Insert new cell
                    var cell1 = row.insertCell(0);
                    cell1.colSpan = 12; cell1.align = "center";
                    cell1.innerText = '@ViewBag.NoRecords';                    
                }
                 
            });
	    });
	</script>
}
