@model Cf.ViewModels.GuarantorStatementVwViewModel
	<div class="row">
        <div class="col-xs-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">@ViewBag.Action @ViewBag.ModuleName</h4>
                    <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i class="icon-minus4"></i></a></li>
                            <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                            <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-body collapse in">
                    <div class="card-block">
                        <form class="form">
                            <div class="form-body">
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorId, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorId, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorId)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorId" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorId)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductEmployeeId, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductEmployeeId, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorRefundableProductProductEmployeeId)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorRefundableProductProductEmployeeId" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorRefundableProductProductEmployeeId)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductEmployeeFullName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductEmployeeFullName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorRefundableProductProductEmployeeFullName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorRefundableProductProductEmployeeFullName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorRefundableProductProductEmployeeFullName)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorRefundableProductProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorRefundableProductProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorRefundableProductProductEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductEmployeeCategoryName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductEmployeeCategoryName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorRefundableProductProductEmployeeCategoryName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorRefundableProductProductEmployeeCategoryName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorRefundableProductProductEmployeeCategoryName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductProductTypeName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorRefundableProductProductProductTypeName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorRefundableProductProductProductTypeName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorRefundableProductProductProductTypeName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorRefundableProductProductProductTypeName)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorSubNumber, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorSubNumber, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorSubNumber)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorSubNumber" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorSubNumber)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorEmployeeId, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorEmployeeId, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorEmployeeId)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorEmployeeId" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorEmployeeId)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorEmployeeFullName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorEmployeeFullName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorEmployeeFullName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorEmployeeFullName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorEmployeeFullName)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorEmployeeDepartmentName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorEmployeeDepartmentName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorEmployeeDepartmentName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorEmployeeDepartmentName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorEmployeeDepartmentName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorEmployeeDepartmentSalaryWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorEmployeeDepartmentSalaryWorkPlaceName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorEmployeeDepartmentSalaryWorkPlaceName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorEmployeeDepartmentSalaryWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorEmployeeDepartmentSalaryWorkPlaceName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorEmployeeDepartmentSalaryWorkPlaceMainWorkPlaceName)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorEmployeeCategoryName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorEmployeeCategoryName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorEmployeeCategoryName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorEmployeeCategoryName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorEmployeeCategoryName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorGuarantorStatusName, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorGuarantorStatusName, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorGuarantorStatusName)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorGuarantorStatusName" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorGuarantorStatusName)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GuarantorNotes, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GuarantorNotes, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GuarantorNotes)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGuarantorNotes" class="form-control" value="@Html.DisplayFor(model => model.Instance.GuarantorNotes)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.GrossSalary, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.GrossSalary, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.GrossSalary)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtGrossSalary" class="form-control" value="@Html.DisplayFor(model => model.Instance.GrossSalary)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.DeductionsAmount, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.DeductionsAmount, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.DeductionsAmount)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtDeductionsAmount" class="form-control" value="@Html.DisplayFor(model => model.Instance.DeductionsAmount)" disabled />
								        </div>
									</div>
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.NetSalary, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.NetSalary, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.NetSalary)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtNetSalary" class="form-control" value="@Html.DisplayFor(model => model.Instance.NetSalary)" disabled />
								        </div>
									</div>
								</div>
                                <div class="row">
									<div class="col-md-4">
								        <div class="form-group">
								            @*@Html.LabelFor(model => model.Instance.ExceptionalIncome, htmlAttributes: new { @class = "control-label" })*@
								            @Html.LabelFor(model => model.Instance.ExceptionalIncome, new Dictionary<string, Object>
								                { { "class", "control-label" },
								                  {"title", Html.ToolTipMessageFor(model => model.Instance.ExceptionalIncome)},
								                  {"data-toggle", "tooltip"},
								                  {"data-placement", "bottom"}
								                })
								                 <input type="text" id="txtExceptionalIncome" class="form-control" value="@Html.DisplayFor(model => model.Instance.ExceptionalIncome)" disabled />
								        </div>
									</div>
								</div>
							</div>

                            <div class="form-actions">
                                <button type="button" class="btn btn-primary mr-1">
								        @Html.ActionLink((string)@ViewBag.Update, "Edit", new {
																	guarantor = Model.Instance.GuarantorId })
                                </button>
								<button type="button" class="btn btn-warning">
							        @Html.ActionLink((string)@ViewBag.Back, "Index")
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@ViewBag.No</span></button>
                <h4 class="modal-title" id="deleteModalLabel">@ViewBag.Delete @ViewBag.ModuleName</h4>
            </div>
            <div id="deleteModalBody" class="modal-body"></div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        $("#deleteModal").modal("hide");  // initially hides the modal pop-up until needed

        $(".deleteLink").on("click", function () {
		var url=$(this).data("url");
            $.get(url, { id: $(this).data("id") }, function (data) {
                $("#deleteModalBody").html(data);

                $("#deleteModal").modal("show");  // shows the modal pop-up now that we have our partial view
            });

        });
    });
</script>

}
