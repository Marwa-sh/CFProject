@model Portal.ViewModels.GuarantorWithStatmentViewModel

@using (Html.BeginForm())
{
    <h4 class="card-title">@ViewBag.Update  </h4>
    <div class="row">
        <div class="col-xs-12">
            <div class="card">

                <div class="card-body collapse in">
                    <div class="card-block">
                        <form class="form">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-body">
                                <div class="row">

                                    <input type="hidden" name="Guarantor.Id" id="txtGuarantorId" class="form-control" value="@Html.DisplayFor(model => model.Guarantor.Id)" />
                                    <input type="hidden" name="Guarantor.RefundableProduct" id="txtRefundableProduct" class="form-control" value="@Html.DisplayFor(model => model.Guarantor.RefundableProduct)" />
                                    <input type="hidden" name="Guarantor.SubNumber" id="txtSubNumber" class="form-control" value="@Html.DisplayFor(model => model.Guarantor.SubNumber)" />

                                    <input type="hidden" name="GuarantorStatement.Guarantor" id="txtGuarantor" class="form-control" value="@Html.DisplayFor(model => model.GuarantorStatement.Guarantor)" />


                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Employee, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Guarantor.Employee, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Guarantor.Employee)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })

                                            <input type="text" id="txtEmployeeId" class="form-control" value="@Html.DisplayFor(model => model.Guarantor.Employee)" disabled />
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.GuarantorStatus, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Guarantor.GuarantorStatus, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Guarantor.GuarantorStatus)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.DropDownListFor(model => model.Guarantor.GuarantorStatus, (SelectList)@ViewBag.GuarantorStatusList, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Guarantor.GuarantorStatus, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Guarantor.Notes, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Guarantor.Notes)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Guarantor.Notes, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Guarantor.Notes, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.GrossSalary, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.GuarantorStatement.GrossSalary, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.GuarantorStatement.GrossSalary)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.GuarantorStatement.GrossSalary, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GuarantorStatement.GrossSalary, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.DeductionsAmount, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.GuarantorStatement.DeductionsAmount, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.GuarantorStatement.DeductionsAmount)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.GuarantorStatement.DeductionsAmount, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GuarantorStatement.DeductionsAmount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.NetSalary, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.GuarantorStatement.NetSalary, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.GuarantorStatement.NetSalary)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.GuarantorStatement.NetSalary, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GuarantorStatement.NetSalary, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.ExceptionalIncome, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.GuarantorStatement.ExceptionalIncome, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.GuarantorStatement.ExceptionalIncome)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.GuarantorStatement.ExceptionalIncome, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GuarantorStatement.ExceptionalIncome, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary mr-1">
                                    @ViewBag.Update
                                </button>
                                <button type="button" class="btn btn-warning">
                                    @Html.ActionLink((string)ViewBag.Back, "Details", new { id = @ViewBag.ProductId })
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
