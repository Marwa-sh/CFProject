@model Cf.ViewModels.LoanRequestVwViewModel
@using Cf.Data;
@using Cf.Services;

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
</div>
@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-xs-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">@ViewBag.FilterOptions</h4>
                    <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i id="mark" class="icon-minus4"></i></a></li>
                            <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                            <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div id="cardOptions" class="card-body collapse in">
                    <div class="card-block">
                        <form class="form">
                            <div class="form-body">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.RequestProductEmployeeId, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.RequestProductEmployeeId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.RequestProductEmployeeId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Filter.RequestProductEmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.RequestProductEmployeeFullNameContains, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.RequestProductEmployeeFullNameContains, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.RequestProductEmployeeFullNameContains)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Filter.RequestProductEmployeeFullNameContains, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.RequestProductProductTypeId, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.RequestProductProductTypeId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.RequestProductProductTypeId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Filter.RequestProductProductTypeId, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.RequestProductProductTypePaymentGroupId, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.RequestProductProductTypePaymentGroupId, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.RequestProductProductTypePaymentGroupId)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.EditorFor(model => model.Filter.RequestProductProductTypePaymentGroupId, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.MinRequestDate, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.MinRequestDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.MinRequestDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.TextBoxFor(model => model.Filter.MinRequestDate, htmlAttributes: new { @class = "form-control IsDate" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*@Html.LabelFor(model => model.Filter.MaxRequestDate, htmlAttributes: new { @class = "control-label" })*@
                                            @Html.LabelFor(model => model.Filter.MaxRequestDate, new Dictionary<string, Object>
                                                { { "class", "control-label" },
                                                  {"title", Html.ToolTipMessageFor(model => model.Filter.MaxRequestDate)},
                                                  {"data-toggle", "tooltip"},
                                                  {"data-placement", "bottom"}
                                                })
                                            @Html.TextBoxFor(model => model.Filter.MaxRequestDate, htmlAttributes: new { @class = "form-control IsDate" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-actions">
                                <button type="submit" class="btn btn-primary mr-1">
                                    @ViewBag.Search
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<div class="row">
    <div class="col-xs-12">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">
                    @ViewBag.NewLoanRequests
                    @if (Model.List.Where(c => c.RequestRequestStatusId == (int)RequestStatusEnum.New).ToList().Count == 0)
                    {<span class="tag tag-default">@Model.List.Where(c => c.RequestRequestStatusId == (int)RequestStatusEnum.New).ToList().Count</span>}
                    else
                    {<span class="tag tag-danger">@Model.List.Where(c => c.RequestRequestStatusId == (int)RequestStatusEnum.New).ToList().Count</span> }
                </h4>

                <a class="heading-elements-toggle"><i class="icon-ellipsis font-medium-3"></i></a>
                <div class="heading-elements">
                    <ul class="list-inline mb-0">
                        <li><a data-action="collapse"><i class="icon-minus4"></i></a></li>
                        <li><a data-action="reload"><i class="icon-reload"></i></a></li>
                        <li><a data-action="expand"><i class="icon-expand2"></i></a></li>
                    </ul>
                </div>
            </div>
            <div class="card-body collapse  in">
                <div class="card-block card-dashboard">
                 

                </div>
                <div class="table-responsive">
                    <table id="Result" class="table table-bordered mb-0">
                        <thead class="thead-inverse">
                            <tr>
                                @*<th></th>*@
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestProductEmployeeId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestProductEmployeeFullName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestProductProductTypeName)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Instance.RequestAmount)
                                </th>

                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.List.Where(c => c.RequestRequestStatusId == (int)RequestStatusEnum.New))
                            {
                                <tr>
                                    @*<td>
                                            <input id="isSellected" name="isSellected" type="checkbox" checked />
                                        </td>*@
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestProductEmployeeId)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestProductEmployeeFullName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestProductProductTypeName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestAmount)
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
                                            <button type="button" class="btn btn-info details" data-id="@item.RequestProductId">
                                                @ViewBag.Details
                                            </button>

                                        </div>
                                    </td>
                                    
                                    @{
                                        int numOfGuarantors = GuarantorVwServices.GetByRefundableProductProductId(item.RequestProductId).Count;
                                     }
                                    @if (numOfGuarantors == 0)
                                    {
                                    <td>
                                        @numOfGuarantors
                                    </td>
                                    }
                                    else
                                    {
                                    <td>
                                        @numOfGuarantors
                                    </td>
                                    }
                                    @*<td>
                                        <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">

                                            <a class="btn btn-success" href="@Url.Action("Validate",new   {   id = item.RequestProductId  })">
                                                <i class="icon-check-circle"></i>
                                            </a>
                                            <a class="btn btn-danger" href="@Url.Action("Reject",new   {   id = item.RequestProductId  })">
                                                <i class="icon-times-circle"></i>
                                            </a>
                                            <a class="btn btn-warning" href="@Url.Action("Exception",new   {   id = item.RequestProductId  })">
                                                <i class="icon-magic"></i>
                                            </a>


                                        </div>
                                    </td>*@
                                     

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" style="margin-right: -160px;width:1000px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">@ViewBag.No</span></button>
                <h4 class="modal-title" id="deleteModalLabel"> @ViewBag.ModuleName</h4>
            </div>
            <div id="detailsModalBody" class="modal-body"></div>
            
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(function () {
            $(".details").click(function () {
                var request_id = $(this).data("id");
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Details", "ManageLoanRequests")',
                    data: '{id: "' + request_id + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        //$('#dialog').html(response);
                        //$('#dialog').dialog('open');
                        $("#detailsModalBody").html(response);

                        $("#detailsModal").modal("show");
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });

            $(".validate").click(function () {
                var request_id = $(this).data("id");
                $.ajax({
                    type: "POST",
                    url: "/ManageLoanRequests/Details",
                    data: '{id: "' + request_id + '" }',
                    contentType: "application/json; charset=utf-8",
                    dataType: "html",
                    success: function (response) {
                        //$('#dialog').html(response);
                        //$('#dialog').dialog('open');
                        $("#detailsModalBody").html(response);

                        $("#detailsModal").modal("show");
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });


        });
    </script>
}